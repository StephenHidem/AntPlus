<?xml version="1.0" encoding="utf-8"?>
<topic id="bb933d2a-72e0-4b0f-ae9c-3425498b9ed4" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>
				This project generates the server and client gRPC messaging protocols for other projects to use. Two protocol files are
				defined - ant_radio.proto and ant_channel.proto. These are compiled by the protobuf compiler into C# classes, yielding
				source files for clients and servers, which in turn are compiled into the class library.
			</para>
			<alert class="note" title="About gRPC">
				<para>
					gRPC is a Google defined protocol for remote procedure calls. It is the recommended RPC to use.
				</para>
			</alert>
			<para>
				Servers/services will derive from gRPCAntRadio.gRPCAntRadioBase and gRPCAntChannel.gRPCAntChannelBase.
			</para>
			<para>
				Clients will reference gRPCAntRadio.gRPCAntRadioClient and gRPCAntChannel.gRPCAntChannelClient.
			</para>
			<alert class="note" title="Implementation">
				<para>
					This is a minimal implementation that supports the examples. It will be expanded upon in the near future.
				</para>
			</alert>
		</introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->

    <relatedTopics>
			<link xlink:href="3ab7deee-1a9a-4d77-9fc4-14343f3bd1ca" />
			<!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
