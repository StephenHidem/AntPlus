<?xml version="1.0" encoding="utf-8"?>
<topic id="bb933d2a-72e0-4b0f-ae9c-3425498b9ed4" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

			<para>
				This project generates the server and client gRPC messaging protocols for other projects to use. Two protocol files are
				defined - ant_radio.proto and ant_channel.proto. These are compiled by the protobuf compiler into C# classes, yielding
				source files for clients and servers, which in turn are compiled into the AntGrpcShared class library.
			</para>
			<alert class="note" title="About gRPC">
				<para>
					gRPC is a Google defined protocol for remote procedure calls. It is the recommended RPC to use.
				</para>
			</alert>
			<para>
				Servers/services will derive from gRPCAntRadio.gRPCAntRadioBase and gRPCAntChannel.gRPCAntChannelBase. See
				the AntGrpcService project for an example of how to implement these services.
			</para>
			<para>
				Clients will use the AntRadioService and AntChannelService classes to communicate with the server. These classes
				are defined in the <application>AntGrpcShared.ClientServices</application> namespace. These classes greatly simplify integration of ANT gRPC
				into client-side applications. Reference this project or copy the assembly into your client application to use these classes.
			</para>
		</introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
		<section address="S1">
			<title>AntRadioService Class</title>
			<content>
				<para>
					The AntRadioService implements IAntRadio and provides services for managing the ANT radio server. It
					extends IAntRadio with a method, FindAntRadioServerAsync, to find and connect to the server. It also
					exposes the server IP address property.
				</para>
				<para>
					The AntRadioService class is currently configured to use the multicast address 239.55.43.6, port 55437 for server
					discovery. The server must be running on the same subnet as the client for discovery to work. The gRPC
					channel is created using the server IP address and port number 5073. This matches the gRPC server configuration
					implemented in the AntGrpcService project.
				</para>
			</content>
		</section>
		<section address="S2">
			<title>AntChannelService Class</title>
			<content>
				<para>
					The AntChannelService implements IAntChannel and provides services for managing the ANT radio server
					channels. It extends IAntChannel with a method, HandleChannelResponseUpdates, which subscribes to and
					handles channel response updates.
				</para>
			</content>
		</section>

		<relatedTopics>
			<link xlink:href="3ab7deee-1a9a-4d77-9fc4-14343f3bd1ca" />
			<!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
