<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Unity Game Development</title><meta name="Title" content="Unity Game Development" /><meta name="Help.Id" content="1784a740-17cd-4e34-91fb-2bbb3bb1ab69" /><meta name="Help.ContentType" content="How To" /><meta name="guid" content="1784a740-17cd-4e34-91fb-2bbb3bb1ab69" /><meta name="Description" content="This is preliminary information! Setting up Unity is admittedly a cumbersome manual process. I'm actively seeking to streamline this process. In the meantime, here's what I've done." /><meta name="tocFile" content="../toc/Root.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Small Earth Technology ANT+ Class Library</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Unity Game Development</h1><div><p>
				This is preliminary information! Setting up Unity is admittedly a cumbersome manual process. I'm actively
				seeking to streamline this process. In the meantime, here's what I've done.
			</p><p><strong>A warm shout out to the good folks who created NuGetForUnity and YetAnotherHttpHandler! Their efforts are deeply appreciated.</strong></p></div><h3 class="quickLinkHeader">Setup Your Project</h3><div><ol><li><p>Create a Unity project.</p></li><li><p>Open Unity Package Manager window and install the following packages.</p><ul><li><p>Install NuGetForUnity from Git URL.
								<a href="https://github.com/GlitchEnzo/NuGetForUnity" target="_blank" rel="noopener noreferrer">Instructions are here.</a></p></li><li><p>Install YetAnotherHttpHandler from Git URL.
								<a href="https://github.com/Cysharp/YetAnotherHttpHandler" target="_blank" rel="noopener noreferrer">Instructions are here.</a></p></li></ul></li><li><p>Select Manage NuGet Packages from the NuGet menu and install the following packages.</p><ul><li><p>Google.Protobuf</p></li><li><p>Grpc.Net.Client</p></li><li><p>System.IO.Pipelines</p></li></ul></li><li><p>Copy the following files from AntPlus\Examples\MAUI-gRPC\AntGrpcShared\obj\[Debug|Release]\net8.0 to Assets/Scripts</p><ul><li><p>AntChannel.cs</p></li><li><p>AntChannelGrpc.cs</p></li><li><p>AntRadio.cs</p></li><li><p>AntRadioGrpc.cs</p></li></ul></li><li><p>Create an AntGrpClient.cs file and add it to Assets/Scripts. Note this <strong>is not</strong> a MonoBehavior. It is a supporting class.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">AntGrpClient.cs</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-csharp">using AntRadioGrpcService;
using Cysharp.Net.Http;
using Google.Protobuf.WellKnownTypes;
using Grpc.Net.Client;
using System;
using System.Net;
using System.Net.Sockets;
using System.Text;
using UnityEngine;

namespace Assets.Scripts
{
    internal class AntGrpcClient
    {
        private readonly IPAddress _grpAddress = IPAddress.Parse("239.55.43.6");
        private const int _multicastPort = 55437;       // multicast port
        private IPAddress _serverIPAddress;

        private const int _gRPCPort = 5073;             // gRPC port
        private GrpcChannel _channel;
        private gRPCAntRadio.gRPCAntRadioClient _client;

        public async void SearchForService()
        {
            IPEndPoint multicastEndPoint = new(_grpAddress, _multicastPort);
            byte[] req = Encoding.ASCII.GetBytes("AntRadioService");
            using UdpClient udpClient = new(AddressFamily.InterNetwork);

            // send request for ANT radio server
            _ = udpClient.Send(req, req.Length, multicastEndPoint);
            UdpReceiveResult result = await udpClient.ReceiveAsync();
            _serverIPAddress = result.RemoteEndPoint.Address;

            // establish gRPC channel
            UriBuilder uriBuilder = new("http", _serverIPAddress.ToString(), _gRPCPort);
            _channel = GrpcChannel.ForAddress(uriBuilder.Uri, new GrpcChannelOptions
            {
                HttpHandler = new YetAnotherHttpHandler { Http2Only = true },
                DisposeHttpClient = true
            });
            _client = new gRPCAntRadio.gRPCAntRadioClient(_channel);

            // get ANT radio properties
            PropertiesReply reply = await _client.GetPropertiesAsync(new Empty());
            Debug.Log(reply);
        }
    }
}</code></pre></div></div></li><li><p>Create an AntRadioScript.cs file and add it to Assets/Scripts. Note this is a MonoBehavior. This script is used to interact with game objects.</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">AntRadioScript.cs</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-csharp">using Assets.Scripts;
using UnityEngine;

public class AntRadioScript : MonoBehaviour
{
    private AntGrpcClient _antGrpcClient;

    // Start is called before the first frame update
    void Start()
    {
        Debug.Log("Create AntGrpcClient");
        _antGrpcClient = new AntGrpcClient();
        _antGrpcClient.SearchForService();
    }

    // Update is called once per frame
    void Update()
    {

    }
}</code></pre></div></div></li><li><p>Create an empty GameObject and add the AntRadioScript component. The script will search for the ANT radio service when Start() is invoked.</p></li></ol><p>This is the bare minimum to establish communication with the ANT radio service.</p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Next Steps</h2><div id="IDJABSection"><p>
					You should create an AntDeviceCollection in order to be notified of ANT devices and interact with a given ANT device.
				</p></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Setup Your Project</a></li><li><a class="quickLink">Next Steps</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div id="FooterContent" class="column"><p>© 2022 Stephen Hidem.</p> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>