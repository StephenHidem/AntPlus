<?xml version="1.0" encoding="utf-8"?>
<topic id="2c4b4d97-d5ec-44ef-846e-d8849c278fad" revisionNumber="1">
	<developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

		<!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

		<introduction>
			<!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
			<!-- <autoOutline /> -->

			<para>
				The AntRadioInterface class library defines interfaces and classes that implementations support and clients utilize.
				Implementations will derive and implement the interfaces appropriate to the underlying hardware that supports the ANT
				radio protocol. Clients will interact with an implementation of the AntRadioInterface to communicate with ANT devices.
			</para>
			<para>
				Implementations at a minimum implement the IAntRadio and IAntChannel interfaces and derive concrete classes from
				AntResponse and DeviceCapabilities. Implementations may optionally support IAntConfiguration, IAntControl, IAntUsbRadio,
				ICrypto, and IFitSettings interfaces.
			</para>
			<alert class="tip">
				<para>
					Implementations are free to implement the interfaces the underlying hardware supports. Even specific methods of required
					interfaces can and should throw NotImplementedException() if hardware doesn't support a particular method. This informs
					the application developer that the client and implementation are not aligned regarding expected functionality.
				</para>
			</alert>
		</introduction>

		<!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
		<section address="Section1">
			<title>Interfaces and Classes</title>
			<content>
				<!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
				<para>
					These interfaces/classes largely mirror the Garmin/Dynastream ANT Message Protocol and Usage specification.
				</para>
			</content>
			<sections>
				<section>
					<title>AntResponse and DeviceCapabilities</title>
					<content>
						<para>
							Mandatory. Implementations will derive from these classes and provide constructors that take the underlying
							hardware data as an argument to populate the properties exposed by these classes.
						</para>
					</content>
				</section>
				<section>
					<title>IAntRadio</title>
					<content>
						<para>
							Mandatory. Methods that must be implemented are InitializeContinuousScanMode(), GetChannel(), GetDeviceCapabilities(),
							RequestMessageAndResponse() and the properties NumChannels, ProductDescription, SerialNumber and Version.
						</para>
					</content>
				</section>
				<section>
					<title>IAntChannel</title>
					<content>
						<para>
							Mandatory. SendExtAcknowledgedData/SendExtAcknowledgedDataAsync methods must be implemented; they are integral to
							working with ANT devices. The only property is ChannelNumber which should be assigned a value relevent to the
							implementation.
						</para>
						<alert class="tip">
							<para>
								Implementors: Consider using locks for methods that transmit data to ANT devices. The intent is to prevent overwriting the channel
								ID and data until the transmission succeeds or times out.
							</para>
						</alert>
					</content>
				</section>
				<section>
					<title>IAntConfiguration</title>
					<content>
						<para>Optional. Implementors will provide methods to configure the ANT radio.</para>
					</content>
				</section>
				<section>
					<title>IAntControl</title>
					<content>
						<para>Optional. Implementors will provide methods to control general operation of the ANT radio.</para>
					</content>
				</section>
				<section>
					<title>IAntUsbRadio</title>
					<content>
						<para>Optional. Implementors will provide methods and properties specific to ANT radios connected to USB ports.</para>
					</content>
				</section>
				<section>
					<title>ICrypto</title>
					<content>
						<para>Optional. Implementors will provide methods to configure cryptographic functions used by the ANT radio.</para>
					</content>
				</section>
				<section>
					<title>IFitSettings</title>
					<content>
						<para>Optional. Implementors will provide methods to manage the ANT radio fitness equipment state.</para>
					</content>
				</section>
			</sections>
		</section>

		<relatedTopics>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.IAntRadio</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.IAntChannel</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.AntResponse</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.DeviceCapabilities</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.IAntConfiguration</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.IAntControl</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.IAntUsbRadio</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.ICrypto</codeEntityReference>
			<codeEntityReference>T:SmallEarthTech.AntRadioInterface.IFitSettings</codeEntityReference>
			<!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
		</relatedTopics>
	</developerConceptualDocument>
</topic>
