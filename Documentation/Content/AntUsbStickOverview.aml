<?xml version="1.0" encoding="utf-8"?>
<topic id="ec2cfcb5-62f1-4593-8295-b6b7cadab615" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">

    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->

    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->

      <para>
				This class library provides a concrete implementation of the AntRadioInterface. The underlying hardware implementation is
				based on the ANT libraries provided by Garmin/Dynastream. All interfaces and abstract classes defined by the AntRadioInterface.
				are implemented.
			</para>
    </introduction>

    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
		<section>
			<title>UsbAntResponse</title>
			<content>
				<para>
					The constructor takes ANT_Response as an argument. The argument is parsed and the base class AntResponse properties are populated.
				</para>
			</content>
		</section>
		<section>
			<title>UsbDeviceCapabilities</title>
			<content>
				<para>
					The constructor takes ANT_DeviceCapabilities as an argument. The argument is parsed and the base class DeviceCapabilities properties are populated.
				</para>
			</content>
		</section>
		<section>
			<title>AntRadio</title>
			<content>
				<para>
					AntRadio consists of a number of partial classes that implement IAntRadio, IAntConfiguration, IAntControl, IAntUsbRadio, ICrypto, and IFitSettings.
				</para>
			</content>
		</section>
		<section>
			<title>AntChannel</title>
			<content>
				<para>
					AntChannel implements IAntChannel. This class employs locks to prevent overwriting the channel ID and data waiting to be sent to an ANT device.
				</para>
			</content>
		</section>

		<relatedTopics>
      <link xlink:href="2c4b4d97-d5ec-44ef-846e-d8849c278fad"/>
			<codeEntityReference>N:SmallEarthTech.AntUsbStick</codeEntityReference>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
