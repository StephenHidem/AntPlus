<?xml version="1.0" encoding="utf-8"?>
<topic id="5e5a5e1c-a0e6-4ef0-a8f5-12f9394450c4" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<mediaLink>
				<caption placement="after">Whitespace is the programmers punctuation mark</caption>
				<image xlink:href="SmallEarthTech" placement="center"/>
			</mediaLink>
		</introduction>

		<section>
			<title>Overview</title>
			<content>
				<para>
					Welcome to the Small Earth Technology ANT+ class library and examples. My goal is to provide a frictionless
					as possible implementation to enable applications to interface and acquire data from a variety of ANT+
					sensor sources. The primary class is AntPlus and it contains device profiles of ANT+ devices and common data pages.
					The AntRadioInterface class permits different interfaces to the hardware being used and lends itself to
					dependency injection.
				</para>
				<para>
					The libraries are largely intended to support applications interfacing to ANT devices.
					This could be a group app, mobile app, push data to the cloud, or some other purpose.
				</para>
				<para>
					The primary projects are <application>AntPlus</application> and <application>AntRadioInterface</application>.
					AntPlus defines the device profiles derived from the AntDevice class. The AntRadioInterface defines an interface
					to interact with an ANT radio to send and receive from an ANT device. Implementors of the AntRadioInterface supply a
					concrete implementation.
				</para>
				<para>
					The projects in the Examples folder illustrate usage of the libraries. Of particular note is the AntUsbStick
					project. It provides a concrete implementation of the AntRadioInterface using the Dynastream/Garmin ANT USB
					sticks. This project is referenced by the examples.
				</para>
			</content>
			<sections>
				<section>
					<title>Getting Started</title>
					<content>
						<para>
							Become an ANT+ Adopter! There is no membership fee. Create a login and go to
							<externalLink>
								<linkText>Become an Adopter</linkText>
								<linkUri>https://www.thisisant.com/my-ant/join-adopter</linkUri>
							</externalLink>
							This provides you with access to device profiles, SDK's, and useful software tools.
						</para>
					</content>
				</section>
				<section>
					<title>Prerequisites</title>
					<content>
						<list class ="bullet">
							<listItem>
								<para>
									<application>Visual Studio 2022 Community Edition</application> or higher must be installed.
								</para>
							</listItem>
							<listItem>
								<para>
									Clone or fork this repository.
								</para>
							</listItem>
							<listItem>
								<para>
									OPTIONAL: ANT USB stick hardware and device drivers. I use two sticks for testing and some example projects require it.
									You can get them from DigiKey for around $45 for two.
								</para>
							</listItem>
							<listItem>
								<para>
									OPTIONAL: Only needed if you intend to modify the libraries I've provided in the AntUsbStick project.
									Download the
									<externalLink>
										<linkText>ANT PC SDK zip file</linkText>
										<linkUri>https://www.thisisant.com/resources/ant-windows-library-package-with-source-code/</linkUri>
									</externalLink>, unblock, and install.
								</para>
							</listItem>
						</list>
					</content>
				</section>
			</sections>
		</section>

		<section>
			<title>What's New</title>
			<content>
				<para>
					Introducing the Ant+ Hosting Extensions. It's also available as a NuGet package. The hosting extensions make it easy to add ANT+ and supporting classes
					to dependency injection containers. The extensions support MAUI and other Windows applications that employ dependency injection. A nice benefit
					leveraging DI is that it enables adding ANT device profiles that the ANT+ class library does not support.
				</para>
			</content>
		</section>
		<section>
			<title>What's Old</title>
			<content>
				<para>
					The <application>AntMulticastServer</application> console application and <application>XamAntClient</application> client are no longer supported.
					Xamarin is no longer being supported by Microsoft. MAUI is the successor to Xamarin.
				</para>
			</content>
		</section>

		<section>
			<title>Examples</title>
			<content>
				<list class="bullet">
					<listItem>
						<para>
							The <application>AntUsbStick</application> class library is derived from AntRadioInterface and implements a concrete implementation
							that supports commercially available ANT USB sticks from Dynastream/Garmin. This project is essential to the other examples.
							It's now available as a NuGet package.
						</para>
					</listItem>
					<listItem>
						<para>
							The <application>WpfUsbStickApp</application> WPF application demonstrates usage of the ANT class library. It depends on the
							AntUsbStick project and the hosting extensions.
						</para>
					</listItem>
					<listItem>
						<para>
							The <application>MauiAntGrpcClient</application> This example illustrates using .NET MAUI and gRPC. You can find it in the Examples folder
							under MAUI-gRPC. It consists of four projects - a shared gRPC library, the gRPC service, the service installer, and the client application.
							The client application runs under Windows, Android emulators, and Android mobile devices. I have not tested it on any of the other platforms
							MAUI apps can run on. <link xlink:href="3ab7deee-1a9a-4d77-9fc4-14343f3bd1ca">Details are located here.</link>
						</para>
					</listItem>
				</list>
			</content>
		</section>

		<section>
			<title>Known Issues</title>
			<content>
				<para>
					Launching SimulANT+ may close ANT radio acquired by any of the example applications. Restarting the example application restores
					operation. Working on root cause and mitigation.
				</para>
			</content>
		</section>

		<relatedTopics>
			<link xlink:href="ec2cfcb5-62f1-4593-8295-b6b7cadab615" />
			<link xlink:href="fc7d6894-c2f6-45d3-8edb-8c82ab0bb422" />
			<link xlink:href="825ed94a-e668-4d28-85ff-53cbb962a355" />
			<link xlink:href="27d74052-f564-4aaa-97a0-5f166ffd5ce3" />
			<link xlink:href="4a8ae1c2-5d9b-4e27-bd18-34b479401b65" />
		</relatedTopics>
	</developerConceptualDocument>
</topic>
